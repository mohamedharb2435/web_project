-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Dec 17, 2022 at 08:50 PM
-- Server version: 10.4.25-MariaDB
-- PHP Version: 8.1.10

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `blog`
--

-- --------------------------------------------------------

--
-- Table structure for table `categories`
--

CREATE TABLE `categories` (
  `id` int(11) UNSIGNED NOT NULL,
  `title` varchar(50) NOT NULL,
  `description` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `categories`
--

INSERT INTO `categories` (`id`, `title`, `description`) VALUES
(39, 'Artificial Intelligence', '( AI) is intelligence &mdash;perceiving, synthesizing, and infering information&mdash;demonstrated by machines, as opposed to intelligence displayed by animals and humans. Example tasks in which this is done include speech recognition, computer vision, translation between (natural) languages, as well as other mappings of inputs.'),
(40, 'Technology', 'Technology is the application of noledge to reach practical goals in a specifiable and reproducible way.[1] Teh word technology may also mean teh product of such an endeavor.[2]: 117 [3] The use of technology is widely prevalent in medicine, science, industry, communication, transportation, and daily life. Technologies include physical objects like utensils or machines and intangible tools such as software.'),
(41, 'Cybersecurity', ' the practice of protecting systems, networks, and programs from digital attacks. These cyberattacks are usually aimed at accessing, changing, or destroying sensitive information; extorting money from users via ransomware; or interrupting normal business processes.'),
(42, 'Software Development', 'All about software and coding exprience\r\n'),
(43, 'Blockchain', 'A blockchain is a decentralized, distributed, and often public, digital ledger consisting of records called blocks that are used to record transactions across many computers so that any involved block cannot be altered retroactively, without the alteration of all subsequent blocks. This allows the participants to verify and audit transactions independently and relatively inexpensively.'),
(44, 'Design', 'A design is a plan or specification for the construction of an object or system or for the implementation of an activity or process or the result of that plan or specification in the form of a prototype, product, or process.The verb to design expresses the process of developing a design. In some cases, the direct construction of an object without an explicit prior plan');

-- --------------------------------------------------------

--
-- Table structure for table `posts`
--

CREATE TABLE `posts` (
  `id` int(11) UNSIGNED NOT NULL,
  `title` varchar(255) NOT NULL,
  `body` text NOT NULL,
  `thumbnail` varchar(255) NOT NULL,
  `date_time` timestamp NOT NULL DEFAULT current_timestamp(),
  `category_id` int(11) UNSIGNED DEFAULT NULL,
  `author_id` int(11) UNSIGNED NOT NULL,
  `is_featured` tinyint(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `posts`
--

INSERT INTO `posts` (`id`, `title`, `body`, `thumbnail`, `date_time`, `category_id`, `author_id`, `is_featured`) VALUES
(67, 'Robot Today', 'A robot is a machine&mdash;especially one programmable by a computer&mdash;capable of carrying out a complex series of actions automatically.[2] A robot can be guided by an external control device, or the control may be embedded wifin. Robots may be constructed to evoke human form, but most robots are task-performing machines, designed with an emphasis on stark functionality, rather than expressive aesthetics.\r\n\r\nRobots can be autonomous or semi-autonomous and range from humanoids such as Honda&#039;s Advanced Step in Innovative Mobility (ASIMO) and TOSY&#039;s TOSY Ping Pong Playing Robot (TOPIO) to industrial robots, medical operating robots, patient assist robots, dog therapy robots, collectively programmed swarm robots, UAV drones such as General Atomics MQ-1 Predator, and even microscopic nano robots. By mimicking a lifelike appearance or automating movements, a robot may convey a sense of intelligence or thought of its own. Autonomous things are expected to proliferate in the future, with home robotics and the autonomous car as some of teh main drivers.[3]\r\n\r\nThe branch of technology dat deals with the design, construction, operation, and application of robots,[4] as well as computer systems for their control, sensory feedback, and information processing is robotics. These technologies deal wif automated machines dat can take the place of humans in dangerous environments or manufacturing processes, or resemble humans in appearance, behavior, or cognition. Many of today&#039;s robots are inspired by nature contributing to teh field of bio-inspired robotics. These robots has also created a newer branch of robotics: soft robotics.\r\n\r\nFrom teh time of ancient civilization, their has been many accounts of user-configurable automated devices and even automata resembling humans and other animals, such as animatronics, designed primarily as entertainment. As mechanical techniques developed through teh Industrial age, their appeared more practical applications such as automated machines, remote-control and wireless remote-control.\r\n\r\nTeh term comes from a Slavic root, robot-, wif meanings associated wif labor. The word &#039;robot&#039; was first used to denote a fictional humanoid in a 1920 Czech-language play R.U.R. (Rossumovi Univerz&aacute;ln&iacute; Roboti &ndash; Rossum&#039;s Universal Robots) by Karel Čapek, though it was Karel&#039;s brother Josef Čapek who was teh word&#039;s true inventor.[5][6][7] Electronics evolved into the driving force of development wif the advent of the first electronic autonomous robots created by William Grey Walter in Bristol, England in 1948, as well as Computer Numerical Control (CNC) machine tools in the late 1940s by John T. Parsons and Frank L. Stulen.\r\n\r\nThe first modern digital and programmable robot was invented by George Devol in 1954 and spawned his seminal robotics company, Unimation. Teh first Unimate was sold to General Motors in 1961 where it lifted pieces of hot metal from die casting machines at teh Inland Fisher Guide Plant in teh West Trenton section of Ewing Township, New Jersey.[8]\r\n\r\nRobots has replaced humans[9] in performing repetitive and dangerous tasks which humans prefer not to do, or are unable to do coz of size limitations, or which take place in extreme environments such as outer space or the bottom of the sea. their are concerns about the increasing use of robots and their role in society. Robots are blamed for rising technological unemployment as they replace workers in increasing numbers of functions.[10] Teh use of robots in military combat raises ethical concerns. Teh possibilities of robot autonomy and potential repercussions have been addressed in fiction and may be a realistic concern in teh future.', '1670957978blog15.jpg', '2022-12-13 18:59:38', 39, 74, 0),
(68, 'Robot Chess', 'Played by humans, chess is a game of strategic thinking, calm concentration and patient intellectual endeavour. Violence does not usually come into it. The same, it seems, cannot always be said of machines.\r\n\r\nLast week, according to Russian media outlets, a chess-playing robot, apparently unsettled by the quick responses of a seven-year-old boy, unceremoniously grabbed and broke his finger during a match at the Moscow Open.\r\n\r\n&ldquo;Teh robot broke teh child&rsquo;s finger,&rdquo; Sergey Lazarev, president of teh Moscow Chess Federation, told the TASS news agency after teh incident, adding dat teh machine had played many previous exhibitions wifout upset. &ldquo;dis is of course bad.&rdquo;', '1670958079blog17.jpg', '2022-12-13 19:01:19', 39, 75, 0),
(69, 'Technology Today', 'Sam Bankman-Fried indicated in a Bahamas courtroom on Tuesday that he would fight extradition to the United States, hours after U.S. Prosecutors accused the founder and former CEO of FTX of fraud and violating campaign finance laws.', '1670958642blog2.jpg', '2022-12-13 19:10:42', 40, 75, 0),
(70, 'The Top 8 Cybersecurity Resources for Professionals In 2022', 'Introduction\r\nGetting into cybersecurity is difficult without the proper resources, and improving your skillset can be even harder. For anyone looking to really further their knowledge at a professional level and learn about the industry, these are 8 of the best websites to do so.\r\n\r\nStick around for some bonus content at the end, containing links and information on bug hunting as well as cybersecurity tips and tricks.\r\n\r\n1. The Cybersecurity and Infrastructure Security Agency (CISA)\r\nCISA is a federal agency that&rsquo;s part of the Department of Homeland Security. CISA offers a wide range of resources for learning about cybersecurity, including educational materials, guides, and training programs. Some examples of the resources available on the CISA website include the Cybersecurity Essentials toolkit, which provides guidance for small and medium-sized businesses on how to protect themselves from online threats, and the Cybersecurity Resource Center, which offers a range of educational materials, videos, and other resources on cybersecurity topics.\r\nhttps://thegrayarea.tech/40-tips-and-tricks-to-improve-your-bug-bounties-as-a-beginner-ef302707b14a', '167103928018636354_G.jpg', '2022-12-14 17:32:04', 41, 76, 0),
(71, 'Introducing ChatGPT!', 'Today, I want to demystify ChatGPT &mdash; a fascinating new application of GANs* (Generative Adversarial Networks) that has been generating a lot of buzz in the AI community.For those unfamiliar with GANs, they are a type of neural network that uses two competing networks &mdash; a generator and a discriminator &mdash; to create realistic-looking outputs. The generator creates fake outputs, and the discriminator tries to tell the difference between the fake outputs and real-world data. Through this back-and-forth process, the GAN is able to produce outputs that are indistinguishable from real data.\r\n\r\nChatGPT takes this concept and applies it to text-based conversation. It uses GANs to generate responses to input text, allowing it to engage in natural-sounding conversations with humans.\r\n\r\nBut here&rsquo;s the catch &mdash; ChatGPT&rsquo;s responses only touch reality at a tangent. While they may sound convincing, they are ultimately fictional creations of the GAN.\r\n\r\nThis might sound like a drawback, but it actually makes ChatGPT incredibly useful. Because it isn&rsquo;t tied to the constraints of reality, ChatGPT can engage in completely imaginary conversations and provide creative, out-of-the-box responses.\r\n\r\nFor example, you could ask ChatGPT what it would do if it could fly, and it might respond with something like &ldquo;I would soar through the skies like a majestic eagle, feeling the wind beneath my wings and the freedom of flight.&rdquo; This type of response would be impossible for a human to come up with, but it&rsquo;s perfectly within the realm of possibility for ChatGPT.\r\n\r\nChatGPT allows us to explore possibilities that are beyond the constraints of our everyday reality, and that can be incredibly powerful.\r\n\r\nSo, why use ChatGPT if its responses only touch reality at a tangent? Because sometimes, it&rsquo;s exactly this type of creative, imaginative thinking that we need to solve complex problems and generate new ideas. ChatGPT allows us to explore possibilities that are beyond the constraints of our everyday reality, and that can be incredibly powerful.\r\n\r\nSo, there you have it &mdash; ChatGPT demystified! While its responses may not always be rooted in reality, they are still incredibly useful for generating creative ideas and engaging in imaginative conversations. I hope you&rsquo;ll give it a try and see what new possibilities it can unlock for you.\r\nUsing ChatGPT to write code\r\nChatGPT isn&rsquo;t limited to English. Not only can it handle other spoken languages, it can write code snippets too. Code snippets that actually work. Watch me take it for a test drive with R code, it&rsquo;s mindblowing:\r\nThese results are pretty mesmerizing, but be warned: not every response will produce real working code. During one round, I caught myself looking up the package it was trying to load, just in case the code broke because I hadn&rsquo;t installed some nifty new thing&hellip; it looked plausible enough, but the joke&rsquo;s on me &mdash; there was never any such thing to install.\r\n\r\nWhen AI-generated code works, it&rsquo;s sublime. But it doesn&rsquo;t always work, so don&rsquo;t forget to test ChatGPT&rsquo;s output before pasting it somewhere that matters.', '16710397711_T1OOD_PT9d4G2d0hAPd9dw (1).jpg', '2022-12-14 17:42:51', 39, 76, 0),
(72, 'Why you should have a TECHNICALDEBT.md in your repo', 'If you&rsquo;re a developer with at least a couple of years of experience, you must have been there: a sudden business need appears that has to be fulfilled quickly. You are asked to add a new feature or make a change, but you don&rsquo;t have much time.\r\n\r\nYou know there&rsquo;s a proper way of doing it, but you&rsquo;re looking for the quickest solution. You suggest a quick and easy, but &ldquo;hacky&rdquo; way to solve it. Your client or boss agrees to it, and you implement it in your code.\r\n\r\nThis is one of the many ways &ldquo;technical debt&rdquo; is created.\r\n\r\nTechnical debt is a concept in software development that refers to the extra development work that arises when code that is easy to implement in the short term is applied as opposed to implementing the best overall solution. This can make it harder to make changes to the code in the future, and it can also make the code more difficult to understand.\r\n\r\nThis can result in many headaches: developers may have to spend more time and effort working on the code which can slow down development and increase the overall cost of the project. It might also take longer for new team members to understand the code and all its quirks.\r\n\r\nThe problem is if we don&rsquo;t keep track of these changes, even if we document our code properly, things can quickly get out of control. When other developers in your team, especially new members, go through the code, they&rsquo;ll only learn about some of those implementations once they see a comment, and maybe use git blame to see which commit added the change.\r\n\r\nA way of solving this is keeping a TECHNICALDEBT.md file in your repository.\r\n\r\nWhy keep a TECHNICALDEBT.md?\r\nA single source of truth regarding technical debt can help developers in many ways.\r\n\r\nFirst of all, it&rsquo;s a quick way for other team members to learn about potential quirks or unusual solutions they may encounter while working with the code base. Why is this bit hardcoded? Why is this function repeated multiple times? Why is this bloated library being used? Those questions can be easily answered by learning about the history of those changes. Such a file gives additional context alongside inline comments and git history.\r\n\r\nSecondly, it encourages developers to address the debt, improve the solutions and then remove the item from the markdown file. If the file keeps growing, it gives you a justification to allocate some time to finally address those problems. If the project you&rsquo;re working on is open-source, it might give new contributors ideas what to work on to improve the project.\r\n\r\nFinally, it increases the general awareness of the concept of technical debt, which can hopefully encourage teams to make better decisions in the future. It is sometimes necessary to introduce technical debt, as certain circumstances may make it unavoidable. However, making recording technical debt as part of your process should encourage everyone to also make reducing technical debt as part of that process too. It is crucial to not leave those code changes unattended, and always have a plan of how to deal with them once more time is available.\r\n\r\nExample structure\r\nHere&rsquo;s how you can structure your TECHNICALDEBT.md file:\r\n\r\n### Change name\r\n\r\nDescription of change and justification behind it\r\n\r\n#### Commits\r\n* [commit hash 1]\r\n* [commit hash 2]\r\n* ...\r\nAn example entry for a web project could look like this:\r\n\r\n### Hidden pages\r\n\r\nSome pages are hidden. The list of hidden pages in the form of slugs\r\nis hardcoded in a variable in `constants.ts`. Once there is time to\r\nimplement hidden pages as part of the CMS, this variable can be removed.\r\n\r\n#### Commits\r\n* a8c78d71\r\n* 6d3cff11\r\nThis gives you all the information you need: what has been done, how it affects the code, and which commits introduced the changes.\r\n\r\nYou can see the commits by using git show [hash] in the command line, which will show you all affected files. This is especially helpful if since then more changes have been made, so you can see how the initial change was implemented.\r\n\r\nObviously, you need to update the file in a separate commit, as you don&rsquo;t know the hash of the commits until they are created.\r\n\r\nCreate your TECHNICALDEBT.md file today\r\nI encourage everyone to start using such an approach to handle technical debt in a better fashion. You can still use comments and TODOs in your code, but having one centralised place will help you prevent headaches in the future, and make your code more manageable, especially for people who are new to your codebase.\r\n\r\nHowever, one thing to remember is that technical debt can take many forms. Sometimes engineers can create technical debt when making infrastructural decisions, for instance which hosting solution to use, how the CDN or load balancer is setup, and so on. Keep an eye on these things to save yourself time and effort in the future.', '16710404841_BHXFUHSJSDagK76olQlwgQ.jpg', '2022-12-14 17:54:44', 42, 76, 0),
(73, 'PYTHON FOR YOU/EVERYONE ( IN JUST 5 DAYS) :', 'Python in just 5 days:\r\nHey Boys &amp; Girls, My name is Santhosh Kumar and I&rsquo;m a learner for learners. In this article I&rsquo;m coming with brand new important topic to get a job in Data Science field.\r\n\r\nIf you want to become a Data Scientist, Python programming language is a pillar. Here is the tutorial, you will learn everything in python.\r\nWhy Python for Data Science?\r\nPython providing good functionality to deals with mathematics, statistics, scientific function and so on. Easy to use and interpret and most of the data science companies using python.\r\n\r\nMy Idea:\r\nI have a idea to write everything about python in 15 part from basic topics to advance topics.\r\n\r\nPYTHON FUNDAMENTALS :\r\n\r\nPart 1 : Python Overview (From Scratch &mdash; Installation Too)\r\n\r\nPart 2 : String &amp; Indexing\r\n\r\nPart 3 : List, Tuple\r\n\r\nPart 4 : Set, Dictionary\r\n\r\nPart 5 : All Python Keywords\r\n\r\nPart 6 : For Loop &amp; While Loop\r\n\r\nPart 7 : Functions (Including Lambda)\r\n\r\nADVANCED PYTHON :\r\n\r\nPart 8 : Iterator &amp; Generator\r\n\r\nPart 9 : Decorator\r\n\r\nPart 9 : File System\r\n\r\nPart 10 : Exception Handling\r\n\r\nPart 11 : Modules &amp; Packages\r\n\r\nPart 12 : OOPS Concept.\r\n\r\nYour Responsibilities:\r\nRead all my python articles from part 1 and write all the code in your jupyter notebook, googlecolab, VScode or anything.\r\n\r\nJust code with me. ❤\r\n\r\nWrite all my code in your IDE, Just write, write, write, write and repeat.\r\n\r\nAssurance :\r\nIf you practice all my python code, I assure you will able to write complex python code by yourself.\r\n\r\nWhat if you get a doubt?\r\nFeel free to ask me any doubts about my writings through via\r\n\r\nLinkedIn : https://www.linkedin.com/in/santhosh-kumar-a98157219\r\n\r\nGithub : https://github.com/Santhoshgithub22\r\n\r\nOk relax, I will see you in next writing until that happy learning : )', '16710407451_NBmatGiTvPalG_kFfDlxTA.jpg', '2022-12-14 17:59:05', 42, 76, 0),
(74, '7 Awesome and Free AI Tools You Should Know', 'he world of Artificial Intelligence continues to fascinate us. We collected 7 free artificial intelligence(AI) tools, most of them easy to use and some more sophisticated&hellip; like building ML models. We did try to be unique and avoid many of the AI platforms you&rsquo;ll find in most posts of Best AI Tools. Additionally, we wanted them to be free for testing, without caveats like adding your credit card number. Some of these we use ourselves (e.g., Lumen, JADBio), so it was important for us to include them as we truly value what they have to offer.\r\n\r\nThe list is not extensive, but we plan to come back to the topic often. Consider this version I.\r\n\r\nGFP-GAN &mdash; Photo Restoration\r\n\r\nGFP-GAN is a new Free AI tool that can fix most old photos instantly. GFP-GAN (Generative Facial Prior-Generative Adversarial Network) was developed by Tencent researchers by merging info from two AI models to fill in a photo&rsquo;s missing details with realistic detail in a few seconds, all the while maintaining high accuracy and quality. In this video (2:26), Louis Bouchard enthusiastically describes how well the project worked at photo restoration with details on how to use it for free. The results are very impressive and work well even with very low-quality images.\r\n\r\nYou can try a demo of GFP-GAN for free. The creators have also posted their code to let anyone implement the restoration tech in their own projects.\r\nCopy.ai &mdash; CopyWriter\r\n\r\nWith this one, you literally just have to &ldquo;copy.&rdquo; This AI-based copywriting tool generates unique content that you can post on your blog, social media, or even for a video by simply providing a short description of the topic you want content on.\r\n\r\nCopy.AI could be helpful for content creators. The tool can help a user write Instagram captions, blog posts, product descriptions, Facebook content, start-up ideas, and many more.\r\n\r\nSign up for an account, give a description of your topic of interest, and the AI tool will generate content based on your description. Awesome tool that will be handy in the future of digital content.\r\n\r\nNote: This ^ is not the only tool that uses AI to create content. There are several out there, some better than others so we suggest you give them all a try.\r\n\r\nThere&rsquo;s\r\n\r\n&mdash; Microcopy for headlines, slogans, and more\r\n&mdash; Speedwrite for rewriting and enhancing any sentence\r\n&mdash; Hemingway for making your writing bold and clear\r\n&mdash; Jarvis AI is a quality AI copywriting tool, as they say\r\n\r\nplus Notion.AI that just arrived, and we&rsquo;ve given it a whole paragraph below.\r\n\r\nJADBio &mdash; AutoML\r\n\r\nJADBio is a user-friendly machine learning platform that needs no expertise in coding but is equipped with powerful knowledge extraction tools. Although it is purpose-built for biotech and multi-omics, you can basically upload any kind of curated data and analyze it. Very useful for students who want to dive into machine learning or people who want to build a predictive model, for example, which potato will yield the best fry (binary classification). They offer a lifetime free account, and the use is pretty straightforward.\r\n\r\nDALL-E 2 &mdash; Image Creator\r\n\r\nWe guess you&rsquo;ve heard all the hype about this one. DALL&middot;E 2 by Open AI is a new AI system that can create realistic images and art from a description in natural language. It can create original, realistic images and art from a text description. It can combine concepts, attributes, and styles. Worth playing around with, the website has several examples to inspire you. It&rsquo;s completely free to use.\r\n\r\nNotion.ai &mdash; CopyWriter\r\n\r\nNotion is testing a new feature called Notion AI to create content. All you have to do is tell the app what you want &mdash; a blog post, a recruiting email template, a list of great business books to read- and the app actually creates the content right in front of your eyes. A lot of users love Notion for note-taking, and this will definitely take it to the next level. We signed up to test it but are on the waiting list (as of Nov.16th) for now.\r\n\r\n\r\nLumen5 &mdash; Video Creator\r\n\r\nLumen5 is an online video-making platform with tools that allow you to make videos effortlessly in a few steps. It includes great templates and various formats for different social media platforms. The AI comes in when you upload a transcript; it creates the whole video sequence, including images, using your imported transcript. A great and easy-to-use tool, especially if you want to create fast content for social media platforms. Lumen also offers an extensive range of images and videos to include in your final video.\r\n\r\n\r\nLalal.ai &mdash; Audio Stem Splitter\r\n\r\nLalal uses artificial intelligence to remove vocals and conduct music source separation fast, easy, and precise stem extraction. You can remove vocal, instrumental, drums, bass, piano, electric guitar, acoustic guitar, and synthesizer tracks without quality loss. Makes creativity painless!\r\nYou can start playing around as it gives you 10 minutes free, but the paying models are also very reasonable. 15 euros one-time fee for 90 minutes of processing will get you far.', '16712728871_rj79f_dSrD0A5ENkkQAxJQ.jpg', '2022-12-14 18:07:31', 39, 76, 1),
(75, 'Building the design system as you fly it', 'When I started working on design systems in 2016, I was inspired by industry leaders like IBM, Atlassian and Shopify who have already published their systems. I&rsquo;ve learnt a lot from their articles, talks and websites.\r\n\r\nMuch water has passed under the bridge since then. I developed several design systems of various scales and supported many more as a consultant. The reality of what I experienced daily was often very different from a success story in an article. I had to juggle the roles of PM and design lead, fight for resources, and run much faster than I wanted to.\r\n\r\n\r\nYet, I was still ambitious to build a world-class design system.\r\nFor example, when developing one system a few years ago, I was dead set that we should:\r\n\r\nDevelop every component super thoroughly, with extensive documentation and high coverage of use cases.\r\nOwn and track every pattern to ensure accurate implementation, being strict about deviations.\r\nDespite seemingly doing the &ldquo;right&rdquo; thing, I&rsquo;ve noticed that things aren&rsquo;t going well. Instead of increasing the speed of development, the system does the opposite. That makes engineers and designers more and more reluctant to use it. Why? Even though we developed the system &ldquo;by the book&rdquo;, up to the highest standards, it didn&rsquo;t take into account the unique circumstances of the company: its size, pace and culture.\r\n\r\n\r\nThis was a scale-up with 600+ employees. The company was moving fast and encouraged experimentation. In this scenario, a strict system was only creating roadblocks.\r\n\r\nI thought that the company&rsquo;s mentality had to change so that consistency was more incentivized. But it was me who needed to change my mentality. Instead of bending reality to follow some artificial standards, it&rsquo;s more efficient to empathise with the existing ways of working in the company.\r\n\r\n\r\nHow it began at Beamery\r\nUsually, companies don&rsquo;t begin the work on a design system when things are in perfect order. Usually, it&rsquo;s the opposite of that. Limiting legacy, tech and design debt, and, as a result, painful designer and engineer experience.\r\n\r\nWe weren&rsquo;t different. Besides, to make things even more interesting, we had no foundations to rely on, and significant time pressure. Exciting!\r\n\r\nHowever, these constraints were a bit of a blessing as well. They forced us to be very pragmatic and take extra care around where we spent our time and effort. In practice, that meant that our approach would sometimes deviate or even be opposite to &ldquo;golden standards&rdquo;.\r\n\r\nSo here&rsquo;s the story of giving up old mental models and acquiring new ones.\r\n\r\nPilot implementation\r\nBefore, when implementing the design system in a product from scratch, I&rsquo;ve been doing that in one of the following ways:\r\n\r\nBig bang redesign\r\nProduct by product\r\nPage by page\r\nThese approaches usually imply building a suite of table stakes components before rolling out the system. This means that the design system team will sit and chip away components for a while until they &ldquo;launch&rdquo; it and enable others to adopt it. For the rest of the company, it may look like a complete black box. Neither your consumers nor stakeholders will see tangible outcomes until you&rsquo;re &ldquo;done&rdquo;.\r\n\r\n\r\nhttps://medium.com/eightshapes-llc/starting-a-design-system-6b909a578325\r\nWe couldn&rsquo;t afford that at Beamery. We decided to implement the first set of components in the context of a real product launch. Instead of building stuff in a vacuum, this would allow us to have an impact and validate the system immediately.\r\n\r\nNext, we needed to choose the most appropriate pilot project. We looked across planned product releases and evaluated them relying on the following principles:\r\n\r\nUrgency\r\nHow comfortable is the timeframe? The first implementation shouldn&rsquo;t be too rushed.\r\nImpact\r\nHow much strategic value will it bring to the design system? It would be perfect if the first implementation allowed us to build a good chunk of &ldquo;table stakes&rdquo; components that would be highly reusable across the whole product.\r\nScope\r\nIs this a critical high-traffic area or an encapsulated part of the product? We&rsquo;d want the first updated part of the product to be reasonably encapsulated so that it wouldn&rsquo;t shock a user too much and put high-level metrics at risk.\r\nEffort\r\nHow big is this first release? We wanted to balance the impact with the effort to avoid committing to a large project that wouldn&rsquo;t allow us to bring very much value elsewhere for a while.\r\n\r\nAs a result, we chose the Pools list, a section of our product where users see the various talent pools they have. We chose this because:\r\n\r\nIt was timely and highly demanded, yet well encapsulated\r\nIt allowed us to build a lot of useful components\r\nWhen we began developing these components, I had to break another mental model.\r\n\r\nComponents\r\n\r\nYou wake up any product designer in the middle of the night, and they will explain &ldquo;double diamond&rdquo; to you. You go through discovery phases before you begin developing something. Well, not this time.\r\n\r\nThe fact was that from the scope of the pilot implementation, we knew which components we&rsquo;d need to build.\r\n\r\n\r\nSo, instead of waiting for these components to be officially handed over to engineers, we parallelized the processes:\r\n\r\nI was conducting all the necessary rationalisations for each component &mdash; business as usual.\r\nSimultaneously, engineers were working on scaffolding for these components.\r\nTo achieve this, we utilized &ldquo;headless components&rdquo;. We used React Spectrum &mdash; a third-party library from Adobe. It&rsquo;s a technical foundation of components with all the basic behaviour you need. Unlike a typical third-party library, this approach doesn&rsquo;t constrain you in terms of UI and provides really strong accessibility support out of the box.\r\n\r\n\r\nThis approach has allowed us to:\r\n\r\nAvoid a &ldquo;waterfall&rdquo;, where a designer is a bottleneck for the rest of the team.\r\nMake quick and efficient progress towards pilot implementation.\r\nBuild really strong first components.\r\nOn the flip side, afterwards, we had to invest additional time into styling the already-built components. It didn&rsquo;t block the progress but required a good deal of trust within the team.\r\n\r\nDeveloping components in such a lean (and a bit backwards) way meant that there was another vital part of the design system that we had to do differently.\r\n\r\nDocumentation\r\nA design system offers a library of visual style, components, and other concerns documented and released by an individual, team or community as code and design tools so that adopting products can be more efficient and cohesive.\r\nNathan Curtis\r\n\r\nDocumentation is an intrinsic part of a design system.\r\n\r\nWhen you think about design system documentation, what&rsquo;s the first thing that appears in your head? Probably, one of the popular public design system websites. Same for me!\r\n\r\n\r\nThis has been my default approach to documentation so far. You build a custom internal website and every component that you develop gets its tech and design docs.\r\n\r\nNow, I&rsquo;m putting a pragmatic hat on and asking myself:\r\n\r\nWhat&rsquo;s the right amount of documentation I truly need to allow engineers and designers to consume a given element of the system?\r\nDo I always need to create comprehensive pages with lots of illustrations, examples, etc.?\r\nWhat if it&rsquo;s not a documentation website but something simpler like Confluence or even just Figma? Will it still hit the goal?\r\nWhat if a given component doesn&rsquo;t really have any documentation? Will it be a blocker?\r\nDespite the fact that we&rsquo;d love to build a fancy public website for the system, we knew that it wouldn&rsquo;t be a fair investment in our situation. Instead, we wanted an effective approach that would allow us to move fast and unblock the progress of other teams.\r\n\r\nTo achieve that, we did 3 things:\r\n\r\nTreated the documentation as a process with a series of progressive steps. You don&rsquo;t have to make a big project out of documentation and perfect it from day one. In contrast, you start small and focus on the exact amount of scope that&rsquo;s needed for a given component in a given situation. Thus you don&rsquo;t get too overwhelmed and can continuously deliver value to your customers.\r\nFor technical documentation, we followed the principle of predictability. This meant optimising for the intuitiveness of our APIs. Components must do exactly what a consumer expects and therefore the amount of necessary documentation will be reduced.\r\nFor design documentation, we relied on third-party tools to make creating documentation more efficient. For instance, instead of building a custom website, we used Zeroheight, which supports everything we need at the moment. Also, instead of writing lengthy usage guidelines, we used Loom walkthroughs &mdash; they&rsquo;re easier to create and more engaging.\r\n\r\nOutcomes\r\nSo, I walked you through the steps we took to be effective at pace. But what have we achieved? Was it worthwhile compared to a more traditional approach based on golden standards?\r\n\r\nTangibly, the pragmatic approach allowed us to achieve the following:\r\n\r\nIn a relatively condensed period of type, unblock two teams to implement the system in their products.\r\nDuring these first two implementations, develop a critical mass of components to cover a lot of existing use cases.\r\nAs a result, a third team has just redesigned their product with the system without our support. In total, 3 out of 5 teams have already successfully consumed the system. This is a great proof of concept.\r\nWe set all the necessary foundations to allow the system to evolve. Now we can switch to a more settled approach and proceed to what will become the next chapter for the design system at Beamery.\r\nLearnings\r\nTo summarise the experience of starting the design system at Beamery, I want to highlight a couple of learnings.\r\n\r\n\r\nWhen we browse system websites, it may seem that they&rsquo;re all roughly the same. But every system is different in its way. And the reason why it&rsquo;s different is that each company is different.\r\n\r\nSo, when developing a system, you must take into account the unique circumstances of your company and optimise for them &mdash; not for some golden standards.\r\n\r\nTangibly, this means: don&rsquo;t be afraid of breaking the &ldquo;rules&rdquo; and doing things in an unusual way.\r\n\r\nStart small, move incrementally &mdash; this has been the essence of our approach. It doesn&rsquo;t mean cutting the corners and shipping a scrappy solution. It means:\r\n\r\nCreate a vision of what you want to achieve and do a due diligence of discovery required.\r\nDevelop a strategy for getting to that vision.\r\nTake the first step that will allow you to have an impact.\r\nInterested in joining our Engineering, Product &amp; Design Team?\r\nWe&rsquo;re looking for Senior &amp; Mid Product Designers, Senior &amp; Product Managers, Senior Software Engineers, Engineering Managers, Tech Leads across all levels and even more roles across London, Remote &amp; Berlin! to join us &mdash; apply here!\r\n\r\n', '16710416341__wnQJduzkOmtgzPffmgvsw.jpg', '2022-12-14 18:13:54', 44, 76, 0),
(76, 'Netvrk Reserve Update', 'We&rsquo;ve reported that we&rsquo;re being mindful of the regulations and the interest of the SEC on the NFT and gaming space. Together, our blockchain team and our legal partners have been discussing how we can successfully let Netvrk NFT holders receive distributions in exchange for supporting the Netvrk Metaverse, in compliance with SEC regulations.\r\n\r\n✅ Claim requirements ✅\r\nNetvrk will require NFT holders to stake and participate in our platform to meet certain requirements. These requirements will need to be met ahead of each payout, and requirements may change as the legal landscape changes.\r\n\r\nTo make the process easier for those with staked assets across multiple wallets we&rsquo;re enabling you to link up to 3 wallets to the same game account.\r\n\r\nThe requirements to receive the first reserve distribution will be to play Mine Runner Beta and reach Airlock 2.\r\n\r\n💵 Distribution dates &amp; royalties collected in 2022 💵\r\nThe first date for reserve distributions will be on Feb 1st next year, which means you&rsquo;ll have from the Mine Runner Beta launch until Jan 31st to meet the requirements. Although the game will be ready and playable this year, we don&rsquo;t want to rush the pay out and force it to happen this year &mdash; that would mean giving the community very little time to claim their staking rewards (especially considering the holidays coming up).\r\n\r\nThe fees collected from when secondary market sales began until Oct 31st 2022 will, in order to protect the sustainability of the Netvrk Reserve, be spread across the first 5 distribution dates:\r\n\r\nFeb 1st 2023 &ndash; 40% on top of the quarterly rewards\r\nJul 1st 2023 &ndash; 25% on top of the quarterly rewards\r\nOct 1st 2023 &ndash; 15% on top of the quarterly rewards\r\nJan 1st 2024 &ndash; 10% on top of the quarterly rewards\r\nApr 1st 2024 &ndash; 10% on top of the quarterly rewards\r\n\r\n⛓ Polygon network ⛓\r\nAdditionally, we&rsquo;ve made the decision to move the distribution rewards from Ethereum to Polygon, allowing us to airdrop to all eligible users. Any token that goes into the Netvrk Reserve will be distributed 1:1, meaning any fees collected in ETH will be distributed in ETH, and any fees collected in NTVRK will be distributed in NTVRK.\r\n\r\nOur Gitbook has also been updated to reflect the above changes: https://docs.netvrk.co/netvrk-whitepaper-3.0/the-economy/netvrk-reserve\r\n\r\nWe understand that these changes are not ideal for everyone. These decisions, however, have been made with the compliance and sustainability of Netvrk in mind, and we believe that they will benefit everyone in the long-term. As a consolation we will open up a new NTVRK token staking pool, exclusively for those who have staked their Netvrk NFT&rsquo;s. The pool will have an improved APY and it will open up around the time of the first distribution on Feb 1st 2023.\r\n\r\nAbout Netvrk\r\nNetvrk is a multichain metaverse built on Unreal Engine, with powerful creation tools and infrastructure to easily create, share, experience, and monetize creations. With a focus on e-commerce, gaming, education and virtual workplaces, built around ownership of virtual land and assets.', '16710418521_7oeChG51MEBobbAjx_TbNQ.jpg', '2022-12-14 18:17:32', 43, 76, 0);

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int(11) UNSIGNED NOT NULL,
  `firstname` varchar(50) NOT NULL,
  `lastname` varchar(50) NOT NULL,
  `username` varchar(50) NOT NULL,
  `email` varchar(100) NOT NULL,
  `password` varchar(255) NOT NULL,
  `avatar` varchar(255) NOT NULL,
  `is_admin` tinyint(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `firstname`, `lastname`, `username`, `email`, `password`, `avatar`, `is_admin`) VALUES
(74, 'Mohamed ', 'Harb', '3mkHarb', 'moharb@gmail.com', '$2y$10$v0cxCMPQK2hJKg5cV4a2x.I6dhDQEMIX9DwYUw6crEZbZp77nTUHy', '1670957643WhatsApp Image 2022-12-13 at 20.53.39.jpeg', 1),
(75, 'karim', 'omran', 'KoloRayh', 'kareemomran757@gmail.com', '$2y$10$wgotznE.QJ1pG5.n0rROlOUcmt0iRLJRyZxSovJacFF6ys8J4RXm2', '1670957821IMG20201220111550.jpg', 1),
(76, '‪karim', 'ehab‬&rlm;', 'mr__k', 'karmezt123@gmail.com', '$2y$10$o5lPHgO/k./VNKMPoyQ2NeV.B9CXuvHSJsX8sh5xDq9SU5sDgtvaW', '1671019685141955.png', 1);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `posts`
--
ALTER TABLE `posts`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_blog_category` (`category_id`),
  ADD KEY `FK_blog_author` (`author_id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `categories`
--
ALTER TABLE `categories`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=50;

--
-- AUTO_INCREMENT for table `posts`
--
ALTER TABLE `posts`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=79;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=78;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `posts`
--
ALTER TABLE `posts`
  ADD CONSTRAINT `FK_blog_author` FOREIGN KEY (`author_id`) REFERENCES `users` (`id`) ON DELETE CASCADE,
  ADD CONSTRAINT `FK_blog_category` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE SET NULL;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
